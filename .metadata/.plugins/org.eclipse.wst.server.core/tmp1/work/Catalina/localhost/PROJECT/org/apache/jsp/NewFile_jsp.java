/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.22
 * Generated at: 2020-01-11 19:08:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NewFile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<style>\r\n");
      out.write("* {box-sizing: border-box}\r\n");
      out.write("body {font-family: \"Lato\", sans-serif;}\r\n");
      out.write("/*menubar vertical*/\r\n");
      out.write("/* Style the tab */\r\n");
      out.write(".tab {\r\n");
      out.write("  float: left;\r\n");
      out.write("  border: 1px solid #ccc;\r\n");
      out.write("  background-color: #f1f1f1;\r\n");
      out.write("  width: 20%;\r\n");
      out.write("  height: 1500px;\r\n");
      out.write(" \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the buttons inside the tab */\r\n");
      out.write(".tab button {\r\n");
      out.write("  display: block;\r\n");
      out.write("  background-color: inherit;\r\n");
      out.write("  color: black;\r\n");
      out.write("  padding: 22px 16px;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  border: none;\r\n");
      out.write("  outline: none;\r\n");
      out.write("  text-align: left;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  transition: 0.3s;\r\n");
      out.write("  font-size: 17px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Change background color of buttons on hover */\r\n");
      out.write(".tab button:hover {\r\n");
      out.write("  background-color: #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Create an active/current \"tab button\" class */\r\n");
      out.write(".tab button.active {\r\n");
      out.write("  background-color: #ccc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the tab content */\r\n");
      out.write(".tabcontent {\r\n");
      out.write("  float: left;\r\n");
      out.write("  padding: 0px 12px;\r\n");
      out.write("  border: 1px solid #ccc;\r\n");
      out.write("  width: 80%;\r\n");
      out.write("  border-left: none;\r\n");
      out.write("  height: 1500px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*image background*/\r\n");
      out.write(".containermenu {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  max-width: 1500px;\r\n");
      out.write("max-height:300px;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".containermenu img {vertical-align: middle;}\r\n");
      out.write("\r\n");
      out.write(".containermenu .content {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  bottom: 0;\r\n");
      out.write("  background: rgb(256, 256, 0); /* Fallback color */\r\n");
      out.write("  background: rgba(0, 0, 0, 0.8); /* Black background with 0.5 opacity */\r\n");
      out.write("  \r\n");
      out.write("  height:100%;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"containermenu\">\r\n");
      out.write("<img src=\"C:\\Users\\Lenovo\\eclipse-workspace\\PROJECT\\WebContent\\img_mountains.jpg\" alt=\"Notebook\" style=\"width:100%;height:300px\">\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\r\n");
      out.write("<font color=\"white\">\r\n");
      out.write(" <h1>\r\n");
      out.write("Vidyarthi University,Puri,Odisha<br>\r\n");
      out.write("50 years of Excellence</h1>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("* {box-sizing: border-box}\r\n");
      out.write("body {font-family: Verdana, sans-serif; margin:0}\r\n");
      out.write(".mySlides {display: none}\r\n");
      out.write("img {vertical-align: middle;}</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</font>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"tab\">\r\n");
      out.write("  <button class=\"tablinks\" onclick=\"openCity(event, 'profile')\" id=\"defaultOpen\">Profile</button>\r\n");
      out.write("  <button class=\"tablinks\" onclick=\"openCity(event, 'timetable')\">Timetable</button>\r\n");
      out.write("  <button class=\"tablinks\" onclick=\"openCity(event, 'attendance')\">Attendance</button>\r\n");
      out.write("  <button class=\"tablinks\" onclick=\"openCity(event, 'notice')\">Notice</button>\r\n");
      out.write("  <button class=\"tablinks\" onclick=\"openCity(event, 'fees')\">Fees</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"profile\" class=\"tabcontent\">\r\n");
      out.write("  <h3>Profile</h3>\r\n");
      out.write("  \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"timetable\" class=\"tabcontent\">\r\n");
      out.write("  <h3>Timetable</h3>\r\n");
      out.write("  <p>time tavle shown here</p> \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"attendance\" class=\"tabcontent\">\r\n");
      out.write("  <h3>Attendance</h3>\r\n");
      out.write("  <p>student atendance here.</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"notice\" class=\"tabcontent\">\r\n");
      out.write("  <h3>notice</h3>\r\n");
      out.write("  <p>notice about college</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"fees\" class=\"tabcontent\">\r\n");
      out.write("  <h3>notice</h3>\r\n");
      out.write("  <p>notice about college</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function openCity(evt, cityName) {\r\n");
      out.write("  var i, tabcontent, tablinks;\r\n");
      out.write("  tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n");
      out.write("  for (i = 0; i < tabcontent.length; i++) {\r\n");
      out.write("    tabcontent[i].style.display = \"none\";\r\n");
      out.write("  }\r\n");
      out.write("  tablinks = document.getElementsByClassName(\"tablinks\");\r\n");
      out.write("  for (i = 0; i < tablinks.length; i++) {\r\n");
      out.write("    tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n");
      out.write("  }\r\n");
      out.write("  document.getElementById(cityName).style.display = \"block\";\r\n");
      out.write("  evt.currentTarget.className += \" active\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// Get the element with id=\"defaultOpen\" and click on it\r\n");
      out.write("document.getElementById(\"defaultOpen\").click();\r\n");
      out.write("</script>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html> \r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
